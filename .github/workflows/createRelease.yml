name: Create release

on:
  workflow_dispatch:
    inputs:
      versionChoice:
        type: choice
        required: true
        description: Version Change
        options:
        - patch
        - minor
        - major

permissions:
  contents: write
  packages: read

env:
  VERSION_CHOICE: ${{ github.event.inputs.versionChoice }}
  IMAGE_NAME: sae-database-writer
  DOCKERHUB_USERNAME: starwit
  DOCKERHUB_ORG: starwitorg  

jobs:
  build:
    name: "Creating maven and github release"
    runs-on: [self-hosted, linux, X64]
    
    steps:
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 21

    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
         maven-version: 3.9.2      

    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version: 22 

    - name: Install GH CLI
      uses: dev-hanz-ops/install-gh-cli-action@v0.2.1
      with:
        gh-cli-version: 2.78.0

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Bump Version and Commit
      run: |
        CURRENT_VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
        RELEASE_VERSION=$(npx semver $CURRENT_VERSION -i ${{ env.VERSION_CHOICE }})
        mvn versions:set -DnewVersion=$RELEASE_VERSION -DgenerateBackupPoms=false
        echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

        git commit -a -m "Bump version to $RELEASE_VERSION"
        git tag $RELEASE_VERSION
        git push
        git push --tags

    - name: Create github release
      run: gh release create ${{ env.RELEASE_VERSION }} --generate-notes 
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Build with Maven
      run: mvn clean package -B --settings .github/workflows/settings.xml --file pom.xml
      env:
         CI: false
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
   
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Get tag name
      run: |
        echo "TAG=$( git describe --abbrev=0 --tags )" >> $GITHUB_ENV
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        sbom: true
        provenance: mode=max
        tags: ${{ env.DOCKERHUB_ORG }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
